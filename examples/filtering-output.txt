=== Демонстрация методов фильтрации в TinyFrameJS ===

1. Методы head() и tail():

1.1. Получение первых 3 строк:
┌────┬─────────┬─────┬──────────┬────────┬────────────┐
│ id │ name    │ age │ city     │ salary │ department │
├────┼─────────┼─────┼──────────┼────────┼────────────┤
│ 1  │ Alice   │ 25  │ New York │ 75000  │ IT         │
│ 2  │ Bob     │ 30  │ Boston   │ 85000  │ HR         │
│ 3  │ Charlie │ 35  │ Chicago  │ 92000  │ IT         │
└────┴─────────┴─────┴──────────┴────────┴────────────┘
[3 rows x 6 columns]

1.2. Получение последних 3 строк:
┌────┬───────┬─────┬─────────┬────────┬────────────┐
│ id │ name  │ age │ city    │ salary │ department │
├────┼───────┼─────┼─────────┼────────┼────────────┤
│ 8  │ Heidi │ 60  │ Houston │ 95000  │ HR         │
│ 9  │ Ivan  │ 65  │ Miami   │ 88000  │ IT         │
│ 10 │ Judy  │ 70  │ Atlanta │ 82000  │ Finance    │
└────┴───────┴─────┴─────────┴────────┴────────────┘
[3 rows x 6 columns]

2. Метод select():

2.1. Выбор колонок name и age:

2.2. Выбор колонок name, city и salary с отключенным автоматическим выводом:
Количество строк: 10
Названия колонок: name, city, salary
┌─────────┬───────────────┬────────┐
│ name    │ city          │ salary │
├─────────┼───────────────┼────────┤
│ Alice   │ New York      │ 75000  │
│ Bob     │ Boston        │ 85000  │
│ Charlie │ Chicago       │ 92000  │
│ David   │ Denver        │ 105000 │
│ Eve     │ Seattle       │ 110000 │
│ Frank   │ San Francisco │ 125000 │
│ Grace   │ Los Angeles   │ 130000 │
│       ... 3 more rows ...        │
└─────────┴───────────────┴────────┘
[10 rows x 3 columns]

3. Метод drop():

3.1. Удаление колонок city и salary:
┌────┬─────────┬─────┬────────────┐
│ id │ name    │ age │ department │
├────┼─────────┼─────┼────────────┤
│ 1  │ Alice   │ 25  │ IT         │
│ 2  │ Bob     │ 30  │ HR         │
│ 3  │ Charlie │ 35  │ IT         │
│ 4  │ David   │ 40  │ Finance    │
│ 5  │ Eve     │ 45  │ HR         │
│ 6  │ Frank   │ 50  │ IT         │
│ 7  │ Grace   │ 55  │ Finance    │
│       ... 3 more rows ...       │
└────┴─────────┴─────┴────────────┘
[10 rows x 4 columns]

4. Метод filter():

4.1. Фильтрация строк, где возраст больше 40:
┌────┬───────┬─────┬───────────────┬────────┬────────────┐
│ id │ name  │ age │ city          │ salary │ department │
├────┼───────┼─────┼───────────────┼────────┼────────────┤
│ 5  │ Eve   │ 45  │ Seattle       │ 110000 │ HR         │
│ 6  │ Frank │ 50  │ San Francisco │ 125000 │ IT         │
│ 7  │ Grace │ 55  │ Los Angeles   │ 130000 │ Finance    │
│ 8  │ Heidi │ 60  │ Houston       │ 95000  │ HR         │
│ 9  │ Ivan  │ 65  │ Miami         │ 88000  │ IT         │
│ 10 │ Judy  │ 70  │ Atlanta       │ 82000  │ Finance    │
└────┴───────┴─────┴───────────────┴────────┴────────────┘
[6 rows x 6 columns]

4.2. Фильтрация с несколькими условиями:
┌────┬───────┬─────┬───────────────┬────────┬────────────┐
│ id │ name  │ age │ city          │ salary │ department │
├────┼───────┼─────┼───────────────┼────────┼────────────┤
│ 4  │ David │ 40  │ Denver        │ 105000 │ Finance    │
│ 5  │ Eve   │ 45  │ Seattle       │ 110000 │ HR         │
│ 6  │ Frank │ 50  │ San Francisco │ 125000 │ IT         │
│ 7  │ Grace │ 55  │ Los Angeles   │ 130000 │ Finance    │
└────┴───────┴─────┴───────────────┴────────┴────────────┘
[4 rows x 6 columns]

5. Метод selectByPattern():

5.1. Выбор колонок, начинающихся с "s":
┌────────┐
│ salary │
├────────┤
│ 75000  │
│ 85000  │
│ 92000  │
│ 105000 │
│ 110000 │
│ 125000 │
│ 130000 │
│... 3 more rows ...│
└────────┘
[10 rows x 1 columns]

5.2. Выбор колонок, содержащих "a":
┌─────────┬─────┬────────┬────────────┐
│ name    │ age │ salary │ department │
├─────────┼─────┼────────┼────────────┤
│ Alice   │ 25  │ 75000  │ IT         │
│ Bob     │ 30  │ 85000  │ HR         │
│ Charlie │ 35  │ 92000  │ IT         │
│ David   │ 40  │ 105000 │ Finance    │
│ Eve     │ 45  │ 110000 │ HR         │
│ Frank   │ 50  │ 125000 │ IT         │
│ Grace   │ 55  │ 130000 │ Finance    │
│         ... 3 more rows ...         │
└─────────┴─────┴────────┴────────────┘
[10 rows x 4 columns]

5.3. Попытка выбора несуществующих колонок:
Количество строк: 0
Количество колонок: 0

6. Метод query():

6.1. Простой запрос:
┌────┬─────────┬─────┬───────────────┬────────┬────────────┐
│ id │ name    │ age │ city          │ salary │ department │
├────┼─────────┼─────┼───────────────┼────────┼────────────┤
│ 1  │ Alice   │ 25  │ New York      │ 75000  │ IT         │
│ 3  │ Charlie │ 35  │ Chicago       │ 92000  │ IT         │
│ 6  │ Frank   │ 50  │ San Francisco │ 125000 │ IT         │
│ 9  │ Ivan    │ 65  │ Miami         │ 88000  │ IT         │
└────┴─────────┴─────┴───────────────┴────────┴────────────┘
[4 rows x 6 columns]

6.2. Сложный запрос:
┌────┬───────┬─────┬───────────────┬────────┬────────────┐
│ id │ name  │ age │ city          │ salary │ department │
├────┼───────┼─────┼───────────────┼────────┼────────────┤
│ 5  │ Eve   │ 45  │ Seattle       │ 110000 │ HR         │
│ 6  │ Frank │ 50  │ San Francisco │ 125000 │ IT         │
│ 7  │ Grace │ 55  │ Los Angeles   │ 130000 │ Finance    │
└────┴───────┴─────┴───────────────┴────────┴────────────┘
[3 rows x 6 columns]

7. Метод where():

7.1. Фильтрация по условию:
┌────┬───────┬─────┬───────────────┬────────┬────────────┐
│ id │ name  │ age │ city          │ salary │ department │
├────┼───────┼─────┼───────────────┼────────┼────────────┤
│ 4  │ David │ 40  │ Denver        │ 105000 │ Finance    │
│ 5  │ Eve   │ 45  │ Seattle       │ 110000 │ HR         │
│ 6  │ Frank │ 50  │ San Francisco │ 125000 │ IT         │
│ 7  │ Grace │ 55  │ Los Angeles   │ 130000 │ Finance    │
└────┴───────┴─────┴───────────────┴────────┴────────────┘
[4 rows x 6 columns]

7.2. Цепочка условий:
Результат содержит 2 строк
┌────┬─────────┬─────┬───────────────┬────────┬────────────┐
│ id │ name    │ age │ city          │ salary │ department │
├────┼─────────┼─────┼───────────────┼────────┼────────────┤
│ 3  │ Charlie │ 35  │ Chicago       │ 92000  │ IT         │
│ 6  │ Frank   │ 50  │ San Francisco │ 125000 │ IT         │
└────┴─────────┴─────┴───────────────┴────────┴────────────┘
[2 rows x 6 columns]

8. Метод iloc():

8.1. Выбор строк 0 и 2, колонок 1 и 3:
┌─────────┬──────────┐
│ name    │ city     │
├─────────┼──────────┤
│ Alice   │ New York │
│ Charlie │ Chicago  │
└─────────┴──────────┘
[2 rows x 2 columns]

9. Метод loc():

9.1. Выбор строк 0 и 2, колонок name и salary:
┌─────────┬────────┐
│ name    │ salary │
├─────────┼────────┤
│ Alice   │ 75000  │
│ Charlie │ 92000  │
└─────────┴────────┘
[2 rows x 2 columns]

10. Цепочка методов:

10.1. Фильтрация + выбор колонок + сортировка:
┌─────────┬─────┬────────┐
│ name    │ age │ salary │
├─────────┼─────┼────────┤
│ Charlie │ 35  │ 92000  │
│ David   │ 40  │ 105000 │
│ Eve     │ 45  │ 110000 │
└─────────┴─────┴────────┘
[3 rows x 3 columns]

=== Конец демонстрации ===
